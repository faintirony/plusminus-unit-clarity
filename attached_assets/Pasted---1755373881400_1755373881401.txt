Вижу проблему! Таблица действительно "уехала" - колонки имеют разную ширину. Нужно зафиксировать ширину всех колонок через CSS Grid или Flexbox с фиксированными размерами.

## Решение: Фиксированная сетка колонок

### CSS (обновления для фиксированной ширины)

```css
/* Фиксированная сетка для карточек */
.card-content {
    padding: 12px 16px;
    display: grid;
    grid-template-columns: 
        40px          /* иконка */
        1fr           /* название (гибкий) */
        80px          /* цена */
        100px         /* себестоимость */
        80px          /* маржа ₽ */
        70px          /* маржа % */
        120px         /* статус */
        120px;        /* табы */
    gap: 16px;
    align-items: center;
    min-height: 52px;
}

/* Убираем старые flex стили */
.product-image,
.product-info,
.metric-column,
.profitability-column,
.product-tabs {
    /* Убираем все flex и width стили */
}

/* Конкретные настройки колонок */
.product-image {
    width: 36px;
    height: 36px;
    background: #f7fafc;
    border-radius: 6px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 18px;
    justify-self: center;
}

.product-info {
    display: flex;
    flex-direction: column;
    justify-content: center;
    min-width: 0; /* Для обрезания длинного текста */
}

.product-title {
    font-size: 14px;
    font-weight: 600;
    color: #2d3748;
    margin-bottom: 2px;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    line-height: 1.3;
}

.product-marketplace {
    font-size: 11px;
    color: #718096;
    font-weight: 500;
}

/* Все метрики одинаково центрированы */
.metric-column {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    text-align: center;
}

.metric-value {
    font-size: 14px;
    font-weight: 700;
    color: #2d3748;
    line-height: 1.2;
    width: 100%;
    text-align: center;
}

.metric-label {
    font-size: 9px;
    color: #a0aec0;
    text-transform: uppercase;
    letter-spacing: 0.3px;
    margin-top: 1px;
    font-weight: 500;
    text-align: center;
}

/* Фиксированная ширина статуса */
.profitability-column {
    display: flex;
    justify-content: center;
    align-items: center;
}

.profitability-badge {
    padding: 4px 8px;
    border-radius: 12px;
    font-size: 10px;
    font-weight: 700;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    white-space: nowrap;
    text-align: center;
    min-width: 100px; /* Фиксированная минимальная ширина */
}

.profitability-badge.needs-cost {
    background: #f7fafc;
    color: #4a5568;
    border: 1px solid #e2e8f0;
    font-size: 14px;
    font-weight: 700;
    width: 28px;
    height: 28px;
    min-width: 28px; /* Переопределяем для знака вопроса */
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
    position: relative;
    cursor: help;
}

/* Табы фиксированной ширины */
.product-tabs {
    display: flex;
    gap: 4px;
    justify-content: flex-end;
    align-items: center;
}

.tab-button {
    padding: 6px 8px;
    border: 1px solid #e2e8f0;
    background: #f8fafc;
    border-radius: 5px;
    font-size: 11px;
    font-weight: 500;
    color: #4a5568;
    cursor: pointer;
    transition: all 0.2s;
    display: flex;
    align-items: center;
    gap: 4px;
    position: relative;
    min-width: 32px; /* Фиксированная минимальная ширина */
    justify-content: center;
}

/* Адаптивность с фиксированной сеткой */
@media (max-width: 1199px) {
    .card-content {
        grid-template-columns: 
            36px          /* иконка */
            1fr           /* название */
            70px          /* цена */
            90px          /* себестоимость */
            70px          /* маржа ₽ */
            60px          /* маржа % */
            32px          /* статус (только ?) */
            96px;         /* табы (3x32px) */
        gap: 12px;
    }
    
    .profitability-badge:not(.needs-cost) {
        writing-mode: vertical-rl;
        text-orientation: mixed;
        font-size: 8px;
        padding: 8px 4px;
        min-width: 24px;
        height: 40px;
    }
}

@media (max-width: 767px) {
    .card-content {
        grid-template-columns: 
            32px          /* иконка */
            1fr           /* название */
            60px          /* цена */
            60px          /* маржа ₽ */
            50px          /* маржа % */
            28px          /* статус */
            84px;         /* табы */
        gap: 8px;
    }
    
    /* Скрываем себестоимость на мобильных */
    .cost-price-column {
        display: none;
    }
}

/* Редактируемые поля тоже фиксированной ширины */
.metric-value.editable {
    cursor: pointer;
    padding: 4px 6px;
    border-radius: 4px;
    transition: all 0.2s;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 4px;
    border: 1px solid transparent;
    position: relative;
    width: 100%;
    box-sizing: border-box;
}

.cost-price-input {
    width: 100%;
    max-width: 80px;
    border: none;
    outline: none;
    background: transparent;
    font-size: 14px;
    font-weight: 700;
    color: #2d3748;
    text-align: center;
    padding: 0;
}

.edit-actions {
    position: absolute;
    right: -30px;
    display: flex;
    gap: 2px;
    background: white;
    padding: 2px;
    border-radius: 4px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}
```

### JavaScript (небольшое обновление)

```javascript
// Обновляем только метод startEditCostPrice для правильного позиционирования
startEditCostPrice(productId) {
    if (this.editingProduct && this.editingProduct !== productId) {
        this.cancelEditCostPrice(this.editingProduct);
    }
    
    const product = this.products.find(p => p.id === productId);
    if (!product) return;
    
    const costElement = document.getElementById(`cost-${productId}`);
    if (!costElement) return;
    
    this.editingProduct = productId;
    
    // Создаем компактный интерфейс редактирования
    costElement.innerHTML = `
        <input type="number" 
               class="cost-price-input" 
               id="cost-input-${productId}"
               value="${product.costPrice || ''}"
               placeholder="0"
               min="0"
               step="1">
        <div class="edit-actions">
            <button class="edit-action-btn save" 
                    onclick="productManager.saveCostPrice('${productId}')" 
                    title="Сохранить">
                ✓
            </button>
            <button class="edit-action-btn cancel" 
                    onclick="productManager.cancelEditCostPrice('${productId}')" 
                    title="Отменить">
                ✕
            </button>
        </div>
    `;
    
    costElement.classList.add('editing');
    
    const input = document.getElementById(`cost-input-${productId}`);
    input.focus();
    if (product.costPrice) input.select();
    
    // Остальные обработчики остаются теми же...
}
```

**Результат:**
- Все колонки имеют фиксированную ширину
- Таблица не "едет" при разном контенте
- Адаптивная сетка для разных экранов
- Компактный интерфейс редактирования