Делаем короткие тексты статусов. Вот обновления:

JavaScript (обновления для script.js)
javascript

Копировать код
// Обновляем метод getProfitabilityText - делаем тексты короче
getProfitabilityText(product) {
    if (product.costPrice === null) return '?';
    return product.isProfitable ? 'ПРИБЫЛЬ' : 'УБЫТОК';
}

// Также обновим updateProductDisplay для корректного отображения после редактирования
updateProductDisplay(productId) {
    const product = this.products.find(p => p.id === productId);
    if (!product) return;

    // Обновляем себестоимость
    const costElement = document.getElementById(`cost-${productId}`);
    if (costElement) {
        costElement.innerHTML = `
            <span class="cost-value">${product.costPrice === null ? 'Не указано' : this.formatCurrency(product.costPrice)}</span>
            <span class="edit-icon">✏️</span>
        `;
        costElement.classList.remove('editing', 'not-specified');
        if (product.costPrice === null) {
            costElement.classList.add('not-specified');
        }
    }

    // Обновляем маржу в рублях
    const marginRubElement = document.getElementById(`margin-rub-${productId}`);
    if (marginRubElement) {
        marginRubElement.textContent = product.marginRub === null ? '—' : this.formatCurrency(product.marginRub);
        marginRubElement.className = `metric-value ${this.getMarginClass(product.marginRub)}`;
    }

    // Обновляем маржу в процентах
    const marginPercentElement = document.getElementById(`margin-percent-${productId}`);
    if (marginPercentElement) {
        marginPercentElement.textContent = product.marginPercent === null ? '—' : `${product.marginPercent.toFixed(1)}%`;
        marginPercentElement.className = `metric-value ${this.getMarginClass(product.marginPercent)}`;
    }

    // Обновляем статус
    const statusElement = document.getElementById(`status-${productId}`);
    if (statusElement) {
        statusElement.className = `profitability-badge ${this.getProfitabilityClass(product)}`;
        statusElement.innerHTML = `
            ${this.getProfitabilityText(product)}
            ${product.costPrice === null ? '<div class="status-tooltip">Укажите себестоимость для расчета прибыльности</div>' : ''}
        `;
    }
}
CSS (небольшое уточнение для статуса)
css

Копировать код
/* Слегка уменьшаем минимальную ширину статуса под новые тексты */
.profitability-badge {
    padding: 4px 8px;
    border-radius: 12px;
    font-size: 10px;
    font-weight: 700;
    text-transform: uppercase;
    letter-spacing: 0.3px;
    white-space: nowrap;
    text-align: center;
    width: 100%;
    min-width: 100px; /* Уменьшаем с 130px до 100px */
    box-sizing: border-box;
}

/* И соответственно уменьшаем колонку в grid */
.card-content {
    grid-template-columns: 
        40px          /* иконка */
        1fr           /* название */
        80px          /* цена */
        100px         /* себестоимость */
        80px          /* маржа ₽ */
        70px          /* маржа % */
        120px         /* статус (уменьшили с 140px) */
        130px;        /* табы */
    gap: 12px;
    align-items: center;
    min-height: 52px;
}

@media (max-width: 1400px) {
    .card-content {
        grid-template-columns: 
            36px          /* иконка */
            1fr           /* название */
            70px          /* цена */
            90px          /* себестоимость */
            70px          /* маржа ₽ */
            60px          /* маржа % */
            100px         /* статус (уменьшили) */
            110px;        /* табы */
        gap: 10px;
    }

    .profitability-badge {
        min-width: 90px;
    }
}
Основные изменения:
1. "ПРИБЫЛЬНЫЙ" → "ПРИБЫЛЬ" (экономим 4 символа)
2. "УБЫТОЧНЫЙ" → "УБЫТОК" (экономим 2 символа)

3. Уменьшили min-width статус-колонки до 100px
4. Скорректировали grid под новые размеры

Теперь статусы должны точно влезать в отведенное место!



